package com.jmw.conference.entities;

//import org.hibernate.Session;
import java.util.*;

public class RoomManager {

    public static void main(String[] args) {
        RoomManager mgr = new RoomManager();

        if (args[0].equals("store")) {
            mgr.createAndStoreEvent("My Event", new Date());
		} else if (args[0].equals("list")) {
		    List rooms = RoomDAO.getRooms();
		    for (int i = 0; i < rooms.size(); i++) {
		        Room room  = (Room) rooms.get(i);
		        System.out.println("Room: " + room.getBuilding() + "/" + room.getFloor() + "/" + room.getName() + "/" +room.getId());
			}
		    List floors = FloorDAO.getFloors();
		    for (int i = 0; i < floors.size(); i++) {
		        Floor floor  = (Floor) floors.get(i);
		        System.out.println("Floor: " + floor.getName() + "/" + floor.getId());
			}
		} else if (args[0].equals("display")) {
			mgr.display();
		}
      HibernateUtil.getSessionFactory().close();
    }

    private void createAndStoreEvent(String title, Date theDate) {
		//create a new building
		Building b = new Building("B1");
		//BuildingDAO.store(b);
		
		//create four floors in the new building
		Floor f = new Floor(0, "F1");
		FloorDAO.store(f);
		f.setName("F2");
		FloorDAO.store(f);
		f.setName("F3");
		FloorDAO.store(f);
		f.setName("F4");
		FloorDAO.store(f);
		
		//create four rooms on the first floor
		Room room = new Room(0, 0, "N1a");
		RoomDAO.store(room);
        room.setName("N1b");
		RoomDAO.store(room);
        room.setName("N1c");
		RoomDAO.store(room);
        room.setName("N1d");
		RoomDAO.store(room);

		//create four rooms on the second floor
		room.setFloor(1);
        room.setName("N2a");
		RoomDAO.store(room);
        room.setName("N2b");
		RoomDAO.store(room);
        room.setName("N2c");
		RoomDAO.store(room);
        room.setName("N2d");
		RoomDAO.store(room);

		//create three rooms on the third floor
		room.setFloor(2);
        room.setName("N3a");
		RoomDAO.store(room);
        room.setName("N3b");
		RoomDAO.store(room);
        room.setName("N3c");
		RoomDAO.store(room);

		//create two rooms on the fourth floor
		room.setFloor(3);
        room.setName("N4a");
		RoomDAO.store(room);
        room.setName("N4b");
		RoomDAO.store(room);
	}
	
	private void display(){
		/*
		Building b = BuildingDAO.getBuilding(0);
		System.out.println("Building: "+ b.getName());
		Set floors = b.getFloors();
		System.out.println("Floors found: "+ floors.size());
		Iterator i = floors.iterator();
		while(i.hasNext()){
			Integer in = (Integer)i.next();
			Floor f = FloorDAO.getFloor(in.intValue());
			System.out.println("\t Floor: " + f.getName() + " - " + f.getId());
			Set rooms = f.getRooms();
			System.out.println("\t  Rooms: "+ rooms.size());
			Iterator i2 = rooms.iterator();
			while (i2.hasNext()){
				Integer in2 = (Integer)i2.next();
				Room r = RoomDAO.getRoom(in2.intValue());
				System.out.println("\t\t Room: " + r.getName() + " - " + r.getId());
			}

		}*/
		AbstractDAO dao = new AbstractDAO();
		List users = dao.findAll(User.class);
		Iterator i = users.iterator();
		while(i.hasNext()){
			User u = (User)i.next();
			System.out.println("User: " + u.getFirstName() + " " + u.getLastName() + "/" + u.getId());
		}
		
		System.out.println("");
		List buildings = dao.findAll(Building.class);
		i = buildings.iterator();
		while(i.hasNext()){
			Building b = (Building)i.next();
			System.out.println("Building: " + b.getName() + "/" + b.getId());
			Set floors = b.getFloors();
			Iterator i1 = floors.iterator();
			while(i1.hasNext()){
				Integer in = (Integer)i1.next();
				Floor f = (Floor)dao.find(Floor.class, in.intValue());
				System.out.println("\t Floor: " + f.getName() + " - " + f.getId());
				Set rooms = f.getRooms();
				Iterator i2 = rooms.iterator();
				while (i2.hasNext()){
					Integer in2 = (Integer)i2.next();
					Room r = RoomDAO.getRoom(in2.intValue());
					System.out.println("\t\t Room: " + r.getName() + " - " + r.getId());
				}
			}
		}
	}

}